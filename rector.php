<?php

declare(strict_types=1);

use Rector\CodeQuality\Rector\Assign\CombinedAssignRector;
use Rector\CodeQuality\Rector\Assign\SplitListAssignToSeparateLineRector;
use Rector\CodeQuality\Rector\BinaryOp\InlineIfToExplicitIfRector;
use Rector\CodeQuality\Rector\Class_\CompleteDynamicPropertiesRector;
use Rector\CodeQuality\Rector\Equal\UseIdenticalOverEqualWithSameTypeRector;
use Rector\CodeQuality\Rector\Foreach_\ForeachToInArrayRector;
use Rector\CodeQuality\Rector\Foreach_\SimplifyForeachToCoalescingRector;
use Rector\CodeQuality\Rector\FuncCall\ArrayKeysAndInArrayToArrayKeyExistsRector;
use Rector\CodeQuality\Rector\FuncCall\ArrayMergeOfNonArraysToSimpleArrayRector;
use Rector\CodeQuality\Rector\FuncCall\ChangeArrayPushToArrayAssignRector;
use Rector\CodeQuality\Rector\FuncCall\CompactToVariablesRector;
use Rector\CodeQuality\Rector\FuncCall\InArrayAndArrayKeysToArrayKeyExistsRector;
use Rector\CodeQuality\Rector\FuncCall\IntvalToTypeCastRector;
use Rector\CodeQuality\Rector\FuncCall\IsAWithStringWithThirdArgumentRector;
use Rector\CodeQuality\Rector\FuncCall\RemoveSoleValueSprintfRector;
use Rector\CodeQuality\Rector\FuncCall\SimplifyInArrayValuesRector;
use Rector\CodeQuality\Rector\FuncCall\SimplifyStrposLowerRector;
use Rector\CodeQuality\Rector\FuncCall\SingleInArrayToCompareRector;
use Rector\CodeQuality\Rector\FuncCall\StrlenZeroToIdenticalEmptyStringRector;
use Rector\CodeQuality\Rector\Identical\BooleanNotIdenticalToNotIdenticalRector;
use Rector\CodeQuality\Rector\Identical\SimplifyArraySearchRector;
use Rector\CodeQuality\Rector\Identical\SimplifyBoolIdenticalTrueRector;
use Rector\CodeQuality\Rector\Identical\SimplifyConditionsRector;
use Rector\CodeQuality\Rector\If_\CombineIfRector;
use Rector\CodeQuality\Rector\If_\ConsecutiveNullCompareReturnsToNullCoalesceQueueRector;
use Rector\CodeQuality\Rector\If_\ExplicitBoolCompareRector;
use Rector\CodeQuality\Rector\If_\RemoveAlwaysTrueConditionSetInConstructorRector;
use Rector\CodeQuality\Rector\If_\ShortenElseIfRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfElseToTernaryRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfIssetToNullCoalescingRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfNotNullReturnRector;
use Rector\CodeQuality\Rector\If_\SimplifyIfReturnBoolRector;
use Rector\CodeQuality\Rector\Return_\SimplifyUselessVariableRector;
use Rector\CodeQuality\Rector\Ternary\ArrayKeyExistsTernaryThenValueToCoalescingRector;
use Rector\CodeQuality\Rector\Ternary\SimplifyDuplicatedTernaryRector;
use Rector\CodeQuality\Rector\Ternary\SimplifyTautologyTernaryRector;
use Rector\CodeQuality\Rector\Ternary\UnnecessaryTernaryExpressionRector;
use Rector\CodingStyle\Rector\ClassConst\SplitGroupedConstantsAndPropertiesRector;
use Rector\CodingStyle\Rector\ClassConst\VarConstantCommentRector;
use Rector\CodingStyle\Rector\ClassMethod\MakeInheritedMethodVisibilitySameAsParentRector;
use Rector\CodingStyle\Rector\Encapsed\EncapsedStringsToSprintfRector;
use Rector\CodingStyle\Rector\FuncCall\ConsistentImplodeRector;
use Rector\CodingStyle\Rector\FuncCall\FunctionCallToConstantRector;
use Rector\CodingStyle\Rector\FuncCall\SimpleArrayCallableToStringRector;
use Rector\CodingStyle\Rector\FuncCall\VersionCompareFuncCallToConstantRector;
use Rector\CodingStyle\Rector\If_\NullableCompareToNullRector;
use Rector\DeadCode\Rector\Array_\RemoveDuplicatedArrayKeyRector;
use Rector\DeadCode\Rector\Assign\RemoveAssignOfVoidReturnFunctionRector;
use Rector\DeadCode\Rector\Assign\RemoveDoubleAssignRector;
use Rector\DeadCode\Rector\Assign\RemoveUnusedVariableAssignRector;
use Rector\DeadCode\Rector\BooleanAnd\RemoveAndTrueRector;
use Rector\DeadCode\Rector\ClassConst\RemoveUnusedClassConstantRector;
use Rector\DeadCode\Rector\ClassConst\RemoveUnusedPrivateConstantRector;
use Rector\DeadCode\Rector\ClassMethod\RemoveUnusedPrivateMethodRector;
use Rector\DeadCode\Rector\Expression\SimplifyMirrorAssignRector;
use Rector\DeadCode\Rector\For_\RemoveDeadIfForeachForRector;
use Rector\DeadCode\Rector\Foreach_\RemoveUnusedForeachKeyRector;
use Rector\DeadCode\Rector\FunctionLike\RemoveCodeAfterReturnRector;
use Rector\DeadCode\Rector\FunctionLike\RemoveDeadReturnRector;
use Rector\DeadCode\Rector\FunctionLike\RemoveDuplicatedIfReturnRector;
use Rector\DeadCode\Rector\If_\RemoveAlwaysTrueIfConditionRector;
use Rector\DeadCode\Rector\If_\RemoveUnusedNonEmptyArrayBeforeForeachRector;
use Rector\DeadCode\Rector\If_\SimplifyIfElseWithSameContentRector;
use Rector\DeadCode\Rector\Instanceof_\RemoveDuplicatedInstanceOfRector;
use Rector\DeadCode\Rector\Plus\RemoveDeadZeroAndOneOperationRector;
use Rector\DeadCode\Rector\Property\RemoveUnusedPrivatePropertyRector;
use Rector\DeadCode\Rector\Stmt\RemoveDeadStmtRector;
use Rector\DeadCode\Rector\Stmt\RemoveUnreachableStatementRector;
use Rector\DeadCode\Rector\Switch_\RemoveDuplicatedCaseInSwitchRector;
use Rector\DeadCode\Rector\Ternary\TernaryToBooleanOrFalseToBooleanAndRector;
use Rector\DeadCode\Rector\TryCatch\RemoveDeadTryCatchRector;
use Rector\Performance\Rector\FuncCall\PreslashSimpleFunctionRector;
use Rector\SOLID\Rector\Foreach_\ChangeNestedForeachIfsToEarlyContinueRector;
use Rector\SOLID\Rector\If_\ChangeIfElseValueAssignToEarlyReturnRector;
use Rector\SOLID\Rector\If_\ChangeNestedIfsToEarlyReturnRector;
use Rector\SOLID\Rector\If_\RemoveAlwaysElseRector;
use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;

return static function (ContainerConfigurator $containerConfigurator): void {
    $parameters = $containerConfigurator->parameters();
    $parameters->set('autoload_paths', [__DIR__.'/vendor/autoload.php', __DIR__.'/vendor-bin/phpunit/vendor/autoload.php']);
    $parameters->set('auto_import_names', true);
    $parameters->set('import_short_classes', false);
    $parameters->set('import_doc_blocks', false);
    $parameters->set('php_version_features', '7.2');
    $parameters->set('paths', [__DIR__.'/src', __DIR__.'/tests']);
    $parameters->set('sets', ['php52', 'php53', 'php54', 'php55', 'php56', 'php70', 'php71', 'php72', 'phpunit40', 'phpunit50', 'phpunit60', 'phpunit70', 'phpunit75', 'phpunit80']);

    $services = $containerConfigurator->services();
    $services->set(ArrayKeyExistsTernaryThenValueToCoalescingRector::class);
    $services->set(ArrayKeysAndInArrayToArrayKeyExistsRector::class);
    $services->set(ArrayMergeOfNonArraysToSimpleArrayRector::class);
    $services->set(BooleanNotIdenticalToNotIdenticalRector::class);
    $services->set(ChangeArrayPushToArrayAssignRector::class);
    $services->set(CombineIfRector::class);
    $services->set(CombinedAssignRector::class);
    $services->set(CompactToVariablesRector::class);
    $services->set(CompleteDynamicPropertiesRector::class);
    $services->set(ConsecutiveNullCompareReturnsToNullCoalesceQueueRector::class);
    $services->set(ExplicitBoolCompareRector::class);
    $services->set(ForeachToInArrayRector::class);
    $services->set(InArrayAndArrayKeysToArrayKeyExistsRector::class);
    $services->set(InlineIfToExplicitIfRector::class);
    $services->set(IntvalToTypeCastRector::class);
    $services->set(IsAWithStringWithThirdArgumentRector::class);
    $services->set(RemoveAlwaysTrueConditionSetInConstructorRector::class);
    $services->set(RemoveSoleValueSprintfRector::class);
    $services->set(ShortenElseIfRector::class);
    $services->set(SimplifyArraySearchRector::class);
    $services->set(SimplifyBoolIdenticalTrueRector::class);
    $services->set(SimplifyConditionsRector::class);
    $services->set(SimplifyDuplicatedTernaryRector::class);
    $services->set(SimplifyForeachToCoalescingRector::class);
    $services->set(SimplifyIfElseToTernaryRector::class);
    $services->set(SimplifyIfIssetToNullCoalescingRector::class);
    $services->set(SimplifyIfNotNullReturnRector::class);
    $services->set(SimplifyIfReturnBoolRector::class);
    $services->set(SimplifyInArrayValuesRector::class);
    $services->set(SimplifyStrposLowerRector::class);
    $services->set(SimplifyTautologyTernaryRector::class);
    $services->set(SimplifyUselessVariableRector::class);
    $services->set(SingleInArrayToCompareRector::class);
    $services->set(SplitListAssignToSeparateLineRector::class);
    $services->set(StrlenZeroToIdenticalEmptyStringRector::class);
    $services->set(UnnecessaryTernaryExpressionRector::class);
    $services->set(UseIdenticalOverEqualWithSameTypeRector::class);
    $services->set(ConsistentImplodeRector::class);
    $services->set(EncapsedStringsToSprintfRector::class);
    $services->set(FunctionCallToConstantRector::class);
    $services->set(MakeInheritedMethodVisibilitySameAsParentRector::class);
    $services->set(NullableCompareToNullRector::class);
    $services->set(SimpleArrayCallableToStringRector::class);
    $services->set(SplitGroupedConstantsAndPropertiesRector::class);
    $services->set(VarConstantCommentRector::class);
    $services->set(VersionCompareFuncCallToConstantRector::class);
    $services->set(RemoveAlwaysTrueIfConditionRector::class);
    $services->set(RemoveAndTrueRector::class);
    $services->set(RemoveAssignOfVoidReturnFunctionRector::class);
    $services->set(RemoveCodeAfterReturnRector::class);
    $services->set(RemoveDeadIfForeachForRector::class);
    $services->set(RemoveDeadReturnRector::class);
    $services->set(RemoveDeadStmtRector::class);
    $services->set(RemoveDeadTryCatchRector::class);
    $services->set(RemoveDeadZeroAndOneOperationRector::class);
    $services->set(RemoveDoubleAssignRector::class);
    $services->set(RemoveDuplicatedArrayKeyRector::class);
    $services->set(RemoveDuplicatedCaseInSwitchRector::class);
    $services->set(RemoveDuplicatedIfReturnRector::class);
    $services->set(RemoveDuplicatedInstanceOfRector::class);
    $services->set(RemoveUnreachableStatementRector::class);
    $services->set(RemoveUnusedClassConstantRector::class);
    $services->set(RemoveUnusedForeachKeyRector::class);
    $services->set(RemoveUnusedNonEmptyArrayBeforeForeachRector::class);
    $services->set(RemoveUnusedPrivateConstantRector::class);
    $services->set(RemoveUnusedPrivateMethodRector::class);
    $services->set(RemoveUnusedPrivatePropertyRector::class);
    $services->set(RemoveUnusedVariableAssignRector::class);
    $services->set(SimplifyIfElseWithSameContentRector::class);
    $services->set(SimplifyMirrorAssignRector::class);
    $services->set(TernaryToBooleanOrFalseToBooleanAndRector::class);
    $services->set(PreslashSimpleFunctionRector::class);
    $services->set(ChangeNestedForeachIfsToEarlyContinueRector::class);
    $services->set(ChangeIfElseValueAssignToEarlyReturnRector::class);
    $services->set(ChangeNestedIfsToEarlyReturnRector::class);
    $services->set(RemoveAlwaysElseRector::class);
};